-- Création des tables dans l'ordre pour respecter les contraintes de clés étrangères

CREATE TABLE roles (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    CONSTRAINT ukofx66keruapi6vyqpv6f2or37 UNIQUE (name)
);

CREATE TABLE users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    active BOOLEAN NOT NULL,
    email VARCHAR(255) NOT NULL,
    name VARCHAR(255),
    password VARCHAR(255),
    profile VARCHAR(255),
    role_id INTEGER NOT NULL,
    CONSTRAINT uk6dotkott2kjsp8vw4d0m25fb7 UNIQUE (email),
    CONSTRAINT users_profile_check CHECK (profile::TEXT = ANY (ARRAY['ETUDIANT', 'PROFESSEUR', 'PROFESSIONNEL', 'ANONYME', 'BIBLIOTHECAIRE'])),
    FOREIGN KEY (role_id) REFERENCES roles(id)
);

CREATE TABLE abonnements (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    date_debut DATE,
    date_fin DATE,
    status BOOLEAN NOT NULL,
    user_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE activity_logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    action_type VARCHAR(255),
    description VARCHAR(255),
    timestamp TIMESTAMP(6),
    user_id BIGINT,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE book_categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    CONSTRAINT uk365kju5hag0fag5c4ux50x0a3 UNIQUE (name)
);

CREATE TABLE languages (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    CONSTRAINT ukf6axmaokhmrbmm746866v0uyu UNIQUE (name)
);

CREATE TABLE books (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    author VARCHAR(255),
    isbn VARCHAR(255),
    title VARCHAR(255),
    category_id BIGINT,
    language_id BIGINT,
    FOREIGN KEY (category_id) REFERENCES book_categories(id),
    FOREIGN KEY (language_id) REFERENCES languages(id)
);

CREATE TABLE book_copies (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code VARCHAR(255),
    status VARCHAR(255),
    book_id BIGINT,
    CONSTRAINT book_copies_status_check CHECK (status::TEXT = ANY (ARRAY['DISPONIBLE', 'EMPRUNTE', 'RESERVE'])),
    FOREIGN KEY (book_id) REFERENCES books(id)
);

CREATE TABLE holidays (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    date DATE,
    name VARCHAR(255)
);

CREATE TABLE loan_policies (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    allow_prolongation BOOLEAN NOT NULL,
    allow_reservation BOOLEAN NOT NULL,
    loan_duration_days INTEGER NOT NULL,
    loan_type VARCHAR(255) NOT NULL,
    max_loans INTEGER NOT NULL,
    max_prolongations INTEGER NOT NULL,
    penalty_days_per_late_day INTEGER NOT NULL,
    user_profil VARCHAR(255) NOT NULL,
    max_reservation INTEGER NOT NULL,
    CONSTRAINT loan_policies_loan_type_check CHECK (loan_type::TEXT = ANY (ARRAY['DOMICILE', 'SUR_PLACE'])),
    CONSTRAINT loan_policies_user_profil_check CHECK (user_profil::TEXT = ANY (ARRAY['ETUDIANT', 'PROFESSEUR', 'PROFESSIONNEL', 'ANONYME', 'BIBLIOTHECAIRE']))
);

CREATE TABLE loans (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    due_date DATE NOT NULL,
    extended BOOLEAN,
    loan_type VARCHAR(255) NOT NULL,
    return_date DATE,
    returned BOOLEAN,
    start_date DATE NOT NULL,
    book_copy_id BIGINT NOT NULL,
    user_id BIGINT,
    CONSTRAINT loans_loan_type_check CHECK (loan_type::TEXT = ANY (ARRAY['DOMICILE', 'SUR_PLACE'])),
    FOREIGN KEY (book_copy_id) REFERENCES book_copies(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE prolongement (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    demande_date DATE,
    duree INTEGER NOT NULL,
    status BOOLEAN NOT NULL,
    loan_id BIGINT,
    FOREIGN KEY (loan_id) REFERENCES loans(id)
);

CREATE TABLE reservations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    active BOOLEAN NOT NULL,
    available_from DATE,
    notified BOOLEAN NOT NULL,
    reservation_date DATE NOT NULL,
    status VARCHAR(255) NOT NULL,
    book_id BIGINT,
    user_id BIGINT,
    CONSTRAINT reservations_status_check CHECK (status::TEXT = ANY (ARRAY['EN_ATTENTE', 'ACCEPTEE', 'ANNULEE', 'EXPIREE'])),
    FOREIGN KEY (book_id) REFERENCES books(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE penalties (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    active BOOLEAN NOT NULL,
    days INTEGER NOT NULL,
    end_date DATE,
    reason VARCHAR(255),
    start_date DATE,
    user_id BIGINT,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
